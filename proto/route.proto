syntax = "proto3";

package route;

service RouteService {
  rpc CreateRoute (CreateRouteRequest) returns (Route) {}
  rpc GetRoute (GetRouteRequest) returns (Route) {}
  rpc UpdateRoute (UpdateRouteRequest) returns (Route) {}
  rpc DeleteRoute (DeleteRouteRequest) returns (DeleteRouteResponse) {}
  rpc ListRoutes (ListRoutesRequest) returns (ListRoutesResponse) {}
  rpc OptimizeRoute (OptimizeRouteRequest) returns (Route) {}
  rpc AssignFleet (AssignFleetRequest) returns (Route) {}
  rpc UpdateRouteStatus (UpdateRouteStatusRequest) returns (Route) {}
}

message Route {
  string id = 1;
  string routeNumber = 2;
  string fleetId = 3;
  string driverId = 4;
  repeated Waypoint waypoints = 5;
  string status = 6;
  string startTime = 7;
  string endTime = 8;
  double totalDistance = 9;
  double estimatedDuration = 10;
  double actualDuration = 11;
  repeated DeliveryStop deliveryStops = 12;
  repeated string deliveryIds = 13;
  RouteMetrics metrics = 14;
  map<string, string> meta = 15;
  string lastUpdated = 16;
  string createdAt = 17;
}

message Waypoint {
  double latitude = 1;
  double longitude = 2;
  string address = 3;
  string type = 4;
  int32 sequence = 5;
  string estimatedArrival = 6;
  string actualArrival = 7;
}

message DeliveryStop {
  string deliveryId = 1;
  string status = 2;
  string scheduledTime = 3;
  string actualTime = 4;
  Waypoint location = 5;
  string notes = 6;
}

message RouteMetrics {
  double fuelConsumption = 1;
  double co2Emission = 2;
  int32 totalStops = 3;
  int32 completedStops = 4;
  double efficiency = 5;
  double averageSpeed = 6;
}

message CreateRouteRequest {
  Route route = 1;
}

message GetRouteRequest {
  string id = 1;
}

message UpdateRouteRequest {
  string id = 1;
  Route route = 2;
}

message DeleteRouteRequest {
  string id = 1;
}

message DeleteRouteResponse {
  bool success = 1;
  string message = 2;
}

message ListRoutesRequest {
  int32 page = 1;
  int32 limit = 2;
  string status = 3;
  string fleetId = 4;
  string driverId = 5;
  string startDate = 6;
  string endDate = 7;
}

message ListRoutesResponse {
  repeated Route routes = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message OptimizeRouteRequest {
  string routeId = 1;
  repeated Waypoint waypoints = 2;
  string optimizationType = 3;
}

message AssignFleetRequest {
  string routeId = 1;
  string fleetId = 2;
  string driverId = 3;
}

message UpdateRouteStatusRequest {
  string routeId = 1;
  string status = 2;
  string notes = 3;
}
